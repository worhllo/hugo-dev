<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>教程 on Watch Your Back</title>
        <link>https://worhllo.github.io/hugo-dev/categories/%E6%95%99%E7%A8%8B/</link>
        <description>Recent content in 教程 on Watch Your Back</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Watch Your Back</copyright><atom:link href="https://worhllo.github.io/hugo-dev/categories/%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>免费搭建无限空间＆支持身份认证的私人图床</title>
        <link>https://worhllo.github.io/hugo-dev/p/%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E6%97%A0%E9%99%90%E7%A9%BA%E9%97%B4%E6%94%AF%E6%8C%81%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%9A%84%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/</link>
        <pubDate>Tue, 12 Nov 2024 19:14:04 +0800</pubDate>
        
        <guid>https://worhllo.github.io/hugo-dev/p/%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E6%97%A0%E9%99%90%E7%A9%BA%E9%97%B4%E6%94%AF%E6%8C%81%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%9A%84%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/</guid>
        <description>&lt;img src="https://worhllo.github.io/hugo-dev/p/%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E6%97%A0%E9%99%90%E7%A9%BA%E9%97%B4%E6%94%AF%E6%8C%81%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%9A%84%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/1432646.png" alt="Featured image of post 免费搭建无限空间＆支持身份认证的私人图床" /&gt;&lt;h1 id=&#34;初步介绍&#34;&gt;初步介绍
&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;本项目是 &lt;a class=&#34;link&#34; href=&#34;https://github.com/cf-pages/Telegraph-Image&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Telegraph-Image&lt;/a&gt; 的重制版，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目图片存储在 telegraph 的服务器上，支持图片审查 API，可自动屏蔽不良图片；&lt;/li&gt;
&lt;li&gt;项目由 cloudflare 提供全球 cdn 服务，基于 cloudflare pages 执行，可自定义域名；&lt;/li&gt;
&lt;li&gt;项目支持身份认证和多种上传方式（拖拽，选择文件，粘贴等），图片突破 5mb 的上传限制；&lt;/li&gt;
&lt;li&gt;项目的自定义程度极高，可自定义页面，网站名称与 logo，过渡动画流畅丝滑&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://sanyue.site/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;作者博客（点击跳转）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/MarSeventh/Sanyue-ImgHub&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;前端仓库（点击跳转）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://sanyue.site/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;项目仓库（点击跳转）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;界面一览&#34;&gt;界面一览
&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731411605668_111.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;111.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;正式实操&#34;&gt;正式实操
&lt;/h1&gt;&lt;h2 id=&#34;环境部署&#34;&gt;环境部署
&lt;/h2&gt;&lt;p&gt;部署此项目首先要求你拥有一个 &lt;a class=&#34;link&#34; href=&#34;https://github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 账号（点击跳转）&lt;/a&gt;，一个 &lt;a class=&#34;link&#34; href=&#34;https://www.cloudflare.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cloudflare 账号（点击跳转）&lt;/a&gt;，一个属于自己的域名以及一个 Telegram 账号&lt;/p&gt;
&lt;h2 id=&#34;telegram-配置&#34;&gt;Telegram 配置
&lt;/h2&gt;&lt;h3 id=&#34;１获取-tg_bot_token&#34;&gt;１．获取 TG_BOT_TOKEN
&lt;/h3&gt;&lt;p&gt;登陆telegram ，在搜索框中搜索 &lt;code&gt;@BotFather.bat &lt;/code&gt;（&lt;strong&gt;注意甄别，千万别点错了&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731412120575_dsads.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dsads.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;打开对话界面，点击 &lt;code&gt;开始&lt;/code&gt;然后按图示进行配置，得到TOKEN后复制保存备用&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731412230292_gsdfgsd.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;gsdfgsd.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;２获取-tg_chat_id频道-id&#34;&gt;２．获取 TG_CHAT_ID（频道 ID）
&lt;/h3&gt;&lt;p&gt;在 telegram 中 打开左侧的二级菜单，打开&lt;code&gt;新建频道&lt;/code&gt;（&lt;strong&gt;Manage Channel&lt;/strong&gt;），频道名字任意，后面内容可以直接跳过。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731415243207_wqrewf.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;wqrewf.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;完成创建后找到&lt;code&gt;管理频道&lt;/code&gt;，在菜单中找到 &lt;code&gt;管理员&lt;/code&gt;（&lt;strong&gt;Administrators&lt;/strong&gt;），菜单中点击 &lt;code&gt;添加管理员&lt;/code&gt;，将刚才创建的机器人（&lt;strong&gt;你命名的那个机器人&lt;/strong&gt;）也设为管理员（&lt;strong&gt;注意搜索时要 @刚才设置的用户名 别填加错了&lt;/strong&gt;），权限默认即可。&lt;/p&gt;
&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731415292316_dgdfgdh.jpg&#34; alt=&#34;dgdfgdh.jpg&#34;  /&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731415328251_erqwetwet.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;erqwetwet.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;完成后首页搜索 &lt;code&gt;@VersaToolsBot&lt;/code&gt;，回复&lt;code&gt;/start&lt;/code&gt;然后在你刚才创建的频道里随便发一条消息，并将消息转发到 &lt;code&gt;@VersaToolsBot&lt;/code&gt;，接着就会得到我们需要的ID，复制保存备用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731415511836_dsagfh.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dsagfh.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;cloudflare-配置&#34;&gt;cloudflare 配置
&lt;/h2&gt;&lt;p&gt;首先打开该&lt;a class=&#34;link&#34; href=&#34;https://github.com/MarSeventh/CloudFlare-ImgBed&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;项目仓库（点击跳转）&lt;/a&gt;，点击 &lt;code&gt;Fork&lt;/code&gt;，跳转页面后不需要任何改动，直接点击 &lt;code&gt;Create fork”&lt;/code&gt;即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731415155858_wtreger.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;wtreger.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731415129812_qetry.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;qetry.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;成功创建 fork 后来到 登录cloudflare 账号，打开仪表盘，点击侧边栏中的 &lt;code&gt;Workers&lt;/code&gt;和 &lt;code&gt;Pages&lt;/code&gt;，点击上方的 &lt;code&gt;创建&lt;/code&gt;，选到 &lt;code&gt;Pages&lt;/code&gt;一栏，点击 &lt;code&gt;连接到 Git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731415087443_wyrty.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;wyrty.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731415027560_czvfdg.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;czvfdg.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414983642_tytryrt.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;tytryrt.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;在打开的第一个页面点击 &lt;code&gt;连接到 GitHub&lt;/code&gt;，随后会跳转到 GitHub 进行授权，选到 &lt;code&gt;All repositories&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;完成授权后会回到cloudflare，找到选择存储库的界面，选择刚才 fork 的仓库后点击 &lt;code&gt;开始设置&lt;/code&gt;，跳转页面后直接划到下面点击 &lt;code&gt;保存并部署即可&lt;/code&gt;，出现下图即部署完成，点击 &lt;code&gt;继续处理项目&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414943151_retret.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;retret.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414903794_ryretre.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;ryretre.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;1设置认证码与后台管理的账号密码&#34;&gt;1．设置认证码与后台管理的账号密码
&lt;/h3&gt;&lt;p&gt;点击 &lt;code&gt;自定义域&lt;/code&gt;， 添加一个你自己的域名，点击左侧栏中的 &lt;code&gt;KV&lt;/code&gt;，点击 &lt;code&gt;创建命名空间&lt;/code&gt;，
名称为 &lt;code&gt;img_url&lt;/code&gt;点击 &lt;code&gt;添加&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414870199_tutut.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;tutut.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414826662_fgfdh.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;fgfdh.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414779533_hjhf.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;hjhf.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414733617_ghgf.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;ghgf.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;完成添加后回到 &lt;code&gt;page&lt;/code&gt; 的界面，点击 &lt;code&gt;设置&lt;/code&gt; 后点击 &lt;code&gt;变量与机密&lt;/code&gt;，找到 &lt;code&gt;绑定&lt;/code&gt; 一栏，点击 &lt;code&gt;添加&lt;/code&gt; ，在弹出的页面中找到 &lt;code&gt;KV 命名空间&lt;/code&gt;，&lt;code&gt;变量名称&lt;/code&gt;填写 &lt;code&gt;img_url&lt;/code&gt;，&lt;code&gt;KV 命名空间 &lt;/code&gt;选择刚才创建的 KV &lt;code&gt;img_url&lt;/code&gt;完成后点击保存&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414655315_bvnbc.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;bvnbc.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414600432_sfgfdg.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;sfgfdg.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414533935_kjhkg.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;kjhkg.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;在绑定的上面找到 &lt;code&gt;变量与机密&lt;/code&gt;一栏，点击右侧的 &lt;code&gt;添加&lt;/code&gt;，添加 &lt;code&gt;环境变量&lt;/code&gt;，常用环境变量如下表，按需要添加&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;变量名称&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;作用&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;&lt;strong&gt;是否推荐&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;em&gt;&lt;strong&gt;TG_CHAT_ID&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
          &lt;td&gt;telegram 频道 ID&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;必须&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;TG_BOT_TOKEN&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;telegram 机器人 token&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;必须&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;em&gt;&lt;strong&gt;BASIC_USER&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
          &lt;td&gt;后台管理的账户名&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;推荐&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;em&gt;&lt;strong&gt;BASIC_PASS&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
          &lt;td&gt;后台管理的密码&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;推荐&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;em&gt;&lt;strong&gt;AUTH_CODE&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
          &lt;td&gt;前台的认证码&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;强烈推荐&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;em&gt;&lt;strong&gt;ModerateContentApiKey&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
          &lt;td&gt;前台的认证码&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;em&gt;&lt;strong&gt;ALLOWED_DOMAINS&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
          &lt;td&gt;防盗链 访问域名限制 多个允许的域名用英文 &lt;code&gt;,&lt;/code&gt; 分割，如：&lt;code&gt;域名.com,域名2.top&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;em&gt;&lt;strong&gt;AllowRandom&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
          &lt;td&gt;随机图 api 的前置，后面会讲到&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;完成后点击&lt;code&gt;保存&lt;/code&gt;， 然后&lt;code&gt;重新部署&lt;/code&gt;（&lt;strong&gt;所有关于环境变量和 kv 绑定的修改都要重新部署一遍&lt;/strong&gt;），选到 &lt;code&gt;部署&lt;/code&gt;一栏， 在 &lt;code&gt;所有部署&lt;/code&gt;下面找到你最新的部署（&lt;strong&gt;就是最上面的那一个&lt;/strong&gt;），鼠标点击在右侧三个点，在弹出的菜单中选择 &lt;code&gt;重新部署&lt;/code&gt;，等待部署完成后即可使用&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414454839_ghgfh.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;ghgfh.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;2内容审查ａｐｉ&#34;&gt;2．内容审查ａｐｉ
&lt;/h3&gt;&lt;p&gt;打开 &lt;a class=&#34;link&#34; href=&#34;https://moderatecontent.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;moderatecontent 官网（点击跳转）&lt;/a&gt;，注册账号后获取到你的 api ，在环境变量中添加一条 &lt;code&gt;ModerateContentApiKey&lt;/code&gt;，值就是你获取的 api，保存后别忘了重新部署一遍&lt;/p&gt;
&lt;h3 id=&#34;3随机图ａｐｉ&#34;&gt;3．随机图ａｐｉ
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731414325208_hdfhg.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;hdfhg.jpg&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;在设置好环境变量后访问 &lt;a class=&#34;link&#34; href=&#34;https://your.domain/random&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://your.domain/random&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;本文出处&#34;&gt;本文出处
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.yunsen2025.top/archives/265&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;完全免费，图文教程手把手教你使用cloudflare搭拜一个无限空间的私人图床，支特身份认证与成人元素鉴定&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.huluohu.com/posts/456/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;保姆级教程：使用Cloudflare+Telegraph搭建零成本图床系统 - 胡萝虎的博客 (huluohu.com)&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Win&#43;R自动化应用</title>
        <link>https://worhllo.github.io/hugo-dev/p/win-r%E8%87%AA%E5%8A%A8%E5%8C%96%E5%BA%94%E7%94%A8/</link>
        <pubDate>Tue, 12 Nov 2024 11:11:59 +0800</pubDate>
        
        <guid>https://worhllo.github.io/hugo-dev/p/win-r%E8%87%AA%E5%8A%A8%E5%8C%96%E5%BA%94%E7%94%A8/</guid>
        <description>&lt;img src="https://worhllo.github.io/hugo-dev/p/win-r%E8%87%AA%E5%8A%A8%E5%8C%96%E5%BA%94%E7%94%A8/fsadadesff.jpg" alt="Featured image of post Win&#43;R自动化应用" /&gt;&lt;h1 id=&#34;什么是winr有何优点&#34;&gt;什么是Win+R，有何优点
&lt;/h1&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;防止有些小白看不懂，所以说明一些，使用Windows+R快捷键就可以打开如下图的运行窗口，在里面输入命令可以方便快捷地打开很多东西，而且本文的所有操作都是在这个运行框里输入的，不要与cmd弄混了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1.可用于实现快速启动软件，打开文件夹/网站&lt;br&gt;
2.可用于实现网站批量搜索&lt;br&gt;
3.可用于实现一键下载视频&lt;br&gt;
4.搭配同步盘轻松实现多台电脑配置同步&lt;br&gt;
5.无需额外安装软件&lt;br&gt;
6.没有兼容性问题，全Windows.系统通用&lt;br&gt;
7.优先级高，可在任何界面呼出&lt;br&gt;
8.完全免费，没有任何限制&lt;br&gt;
9.有利于电脑桌面整洁&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731383831751_qwe.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;qwe.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;-如何设置&#34;&gt;# 如何设置
&lt;/h1&gt;&lt;h2 id=&#34;1配置环境变量&#34;&gt;&lt;strong&gt;1.配置环境变量&lt;/strong&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首先需要创建一个文件夹，用于存放包括软件但不限于软件快捷方式、bat文件等文件，然后复制文件夹的路径&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将这个文件夹设置到系统环境变量中，搜索栏输入&lt;code&gt;高级系统设置&lt;/code&gt;来直达设置页面&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731385222742_wqew.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;wqew.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找到系统变量中的&lt;code&gt;Path&lt;/code&gt;变量，点击&lt;code&gt;编辑&lt;/code&gt;，点击&lt;code&gt;新建&lt;/code&gt;，然后将之前复制的文件夹路径粘贴进去，至此，最重要的&lt;code&gt;地基&lt;/code&gt;已经搭建完成，现在可以开始搭建&lt;code&gt;高楼&lt;/code&gt;了&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2快速启动软件快捷方式等&#34;&gt;&lt;strong&gt;2.快速启动软件（快捷方式）等&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;如图，本人设置的文件夹路径为D:\win＋R，那就只需要把你想快速启动的软件、快捷方式（&lt;strong&gt;放进该文件夹内的文件都可以任意命名，尽量简短易记&lt;/strong&gt;）都放到这个文件夹里面去，然后你的电脑桌面就可以不放任何软件的快捷方式了，有想要启动的软件，你只需要按下键盘上的&lt;code&gt;WIN+R&lt;/code&gt;键，接着输入你想启动的软件的对应名，最后按下回车即可&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;各个软件快捷方式的名称推荐两种方式来命名：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以用缩写：比如说&lt;code&gt;Photoshop&lt;/code&gt;可以改为&lt;code&gt;ps&lt;/code&gt;、&lt;code&gt;MuMu模拟器&lt;/code&gt;改为&lt;code&gt;mumu&lt;/code&gt;等&lt;/li&gt;
&lt;li&gt;可以直接根据需求：如可以把&lt;code&gt;QQ音乐&lt;/code&gt;直接命名为&lt;code&gt;听歌&lt;/code&gt;、
&lt;code&gt;Steam&lt;/code&gt;命名为&lt;code&gt;游戏&lt;/code&gt;等&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731386051197_adsfd.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;adsfd.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;3快速打开网站&#34;&gt;&lt;strong&gt;3.快速打开网站&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;先新建一个文本文档，在文档中输入以下内容&lt;code&gt;https://worhllo.github.io/hugo-dev/&lt;/code&gt;是你想设置的网址链接（&lt;strong&gt;可设置多个网站链接&lt;/strong&gt;），请自定义设置。然后把文本文档的后缀名从&lt;code&gt;txt&lt;/code&gt;改为&lt;code&gt;.bat&lt;/code&gt;,文件名自定义设置，接着把这个&lt;code&gt;.bat&lt;/code&gt;文件放到你的快速启动文件夹中，然后只需要&lt;code&gt;WIN+R&lt;/code&gt;唤起运行窗口，再输入定义好的名字，就能快速打开网站了。后续如果想对&lt;code&gt;.bat&lt;/code&gt;文件进行修改，直接右键&lt;code&gt;.bat&lt;/code&gt;文件，选择编辑即可&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;@echo off
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 使用默认浏览器打开URL地址
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;start https://worhllo.github.io/hugo-dev/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;4多网站批量搜索&#34;&gt;&lt;strong&gt;4.多网站批量搜索&lt;/strong&gt;
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在实现批量搜索之前，你必须得了解搜索串是什么。比如说我用bing.com搜索一下&lt;code&gt;吾爱破解&lt;/code&gt;然后在地址栏中可以看到如下链接：&lt;code&gt;https://cn.bing.com/search?q=吾爱破解&amp;amp;cvid&lt;/code&gt;，其中的关键部分是：&lt;code&gt;https://cn.bing.com/search?q&lt;/code&gt;=
&lt;code&gt;吾爱破解&lt;/code&gt;则是传递进这个搜索引擎的关键词，而后面的&lt;code&gt;&amp;amp;cvid&lt;/code&gt;则可有可无，
有些时候链接后面会带上更多的参数，你可以自己一点点删掉。删掉之后回车访问一下，如果还能正常访问，说明这些就属于多余的参数，都可以删掉&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而实现批量搜索的方法其实很简单，和就是在批量打开网站的基础上，在搜索串后
面加上参数&lt;code&gt;%1&lt;/code&gt;比如下面就是同时在百度、必应、Yandex.上进行搜索的代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;@echo off
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;start explorer.exe &amp;#34;https://www.baidu.com/s?wd=%1+2+%3+%4+%5+%6+%7+%8+%9&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;start explorer.exe &amp;#34;https://cn.bing.com/search?q=%1+%2+%3+%4+%5+%6+%7+%8+%9&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;start explorer.exe &amp;#34;https://yandex.com/search/?text=%1+%2+%3+%4+%5+%6+%7+%8+%9&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;之后我只需要用&lt;code&gt;WIN+R&lt;/code&gt;唤起运行窗口，依次输入：定义好的名字&amp;mdash;-空格&amp;mdash;-想要搜索的关键词，然后敲下回车，即可轻松进行批量搜索了&lt;/p&gt;
&lt;p&gt;这里只得解释一下代码中提到的&lt;code&gt;%1,%2,%3&lt;/code&gt;，它表示传入搜索串中的参数，而这个参数最多你可以传递9个，这个参数可多不可少，（&lt;strong&gt;即搜索串后面只有一个&lt;code&gt;%1&lt;/code&gt;&lt;/strong&gt;)，那在运行窗口时，你就只能输入一个完整的搜索关键词，而如果你的搜索串中传了多个参数，那么在运行窗口中就可以输入多个关键词，不过注意每个关键词之间要有一个空格，同时最多能传入9个关键词。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731403097330_wrewfwe.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;wrewfwe.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;5本文出处&#34;&gt;&lt;strong&gt;5.本文出处&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/Bk6iyYo0i5hBtUVqy5eXkQ&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;私认Windows最强效率神器：WIN+R的独家使用心得！（全网最全）&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Hugo&#43;Github博客部署</title>
        <link>https://worhllo.github.io/hugo-dev/p/hugo-github%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/</link>
        <pubDate>Mon, 11 Nov 2024 13:12:41 +0800</pubDate>
        
        <guid>https://worhllo.github.io/hugo-dev/p/hugo-github%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/</guid>
        <description>&lt;img src="https://worhllo.github.io/hugo-dev/p/hugo-github%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/12123.jpg" alt="Featured image of post Hugo&#43;Github博客部署" /&gt;&lt;h2 id=&#34;环境准备&#34;&gt;环境准备
&lt;/h2&gt;&lt;h3 id=&#34;下载hugo&#34;&gt;下载Hugo
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;网址：&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo官网&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Github地址:&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;gohugoio/hugo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731302389412_image1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image1.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择合适的版本下载。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;下载git&#34;&gt;下载git
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;点击&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731302674605_Git%e5%ae%98%e7%bd%91.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Git官网.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击 &lt;strong&gt;Download for Windows&lt;/strong&gt; 按照&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_42242910/article/details/136297201&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;指引&lt;/a&gt;安装即可。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;搭建博客&#34;&gt;搭建博客
&lt;/h2&gt;&lt;h3 id=&#34;创建blog&#34;&gt;创建Blog
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;解压&lt;code&gt;hugo_extended_0.134.2_windows-amd64.zip&lt;/code&gt;文件，在&lt;code&gt;dev&lt;/code&gt;文件夹下进入cmd命令窗口（&lt;strong&gt;全选文件路径，输入cmd后回车&lt;/strong&gt;），输入&lt;code&gt;hugo new site xxxx&lt;/code&gt;创建文件（&lt;strong&gt;xxx任意命名，此处以dev为例&lt;/strong&gt;），代码输入无误之后就会生成一个你命名的文件夹。（&lt;strong&gt;注意不要急着关闭cmd命令窗口，后面接着要用到&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731306688619_555.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;555.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731302868323_file%e6%88%aa%e5%9b%be.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;file截图.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再次打开cmd命令窗口，输入&lt;code&gt;cd dev&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将上图页面中的&lt;code&gt;hugo.exe&lt;/code&gt;文件复制到&lt;code&gt;dev&lt;/code&gt;文件内。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731303239677_111.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;111.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在cmd命令行中输入&lt;code&gt;hugo server -D&lt;/code&gt;，运行成功后会出现以下界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731310888077_hugo.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;hugo.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此时，在浏览器中输入命令窗口中出现的链接，即&lt;code&gt;http://localhost:1313/&lt;/code&gt;，如果操作无误，则会提示&lt;code&gt;Page Not Found&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;下载主题&#34;&gt;下载主题
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;再次进入&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Hugo官网&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击&lt;code&gt;Themes&lt;/code&gt;选择一款适合的主题，这里以&lt;code&gt;Stack&lt;/code&gt;这款主题为例。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731303957330_Stack.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Stack.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击&lt;code&gt;Download&lt;/code&gt;，下滑至&lt;code&gt;Assets&lt;/code&gt;界面，并选择适当的版本，将源码下载下来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731304063587_image9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image9.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将文件解压，将其命名为&lt;code&gt;hugo-theme-stack&lt;/code&gt;，移动至&lt;code&gt;dev\themes&lt;/code&gt;文件下，接着打开&lt;code&gt;exampleSite&lt;/code&gt;文件夹，复制其中的&lt;code&gt; Content&lt;/code&gt; 和 &lt;code&gt;hugo.yaml&lt;/code&gt; 复制到主文件夹&lt;code&gt;dev&lt;/code&gt;中，然后删掉&lt;code&gt;hugo.toml&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731310967811_999.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;999.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再次打开cmd命令窗口，输入&lt;code&gt;hugo server -D&lt;/code&gt;，打开浏览器输入&lt;code&gt;http://localhost:1313/&lt;/code&gt;，若操作无误则主题会正常显示，并出现出相关范例文章。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731304629655_111.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;111.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;github部署&#34;&gt;Github部署
&lt;/h2&gt;&lt;h3 id=&#34;常规部署&#34;&gt;常规部署
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;前提条件：拥有一个属于自己的github账号，没有请自行注册。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新建仓库，命名任意，但是最好命名为&lt;code&gt;xxx(你的gitub用户名).github.io&lt;/code&gt;，（&lt;strong&gt;后续生成的链接短，访问博客很方便&lt;/strong&gt;）选择&lt;code&gt;Public&lt;/code&gt;，最后点击&lt;code&gt;Creat respository&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731304995863_222.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;222.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731304991297_333.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;333.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入到刚创建好的仓库后，前往&lt;code&gt;setting -&amp;gt; Pages -&amp;gt; Branch&lt;/code&gt;选择main分支，点击&lt;code&gt;Save&lt;/code&gt;，等待一会儿，就会出现&lt;code&gt;https://{github用户名}.github.io&lt;/code&gt; 的地址，该地址即为博客的访问地址。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731311033715_1213.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1213.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此时，原来的cmd命令窗口终于能关掉了，接着，在&lt;code&gt;public&lt;/code&gt;文件夹（&lt;strong&gt;跟之前不一样了，注意&lt;/strong&gt;）下进入cmd命令窗口（&lt;strong&gt;全选文件路径，输入cmd后回车&lt;/strong&gt;），依次以下命令，操作无误后刷新新建仓库，就会发现文件都上传到github仓库上面了。至此，hugo博客的基本搭建已经结束。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;code&gt;cmd命令&lt;/code&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git add&lt;/code&gt; .&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git commit -m &amp;quot;first commit&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git branch -M main&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git remote add origin {你的github仓库地址}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git push -u origin main&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;github-action自动部署&#34;&gt;Github Action自动部署
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;​       Github Actions是Github上一个类似于持续集成的功能，它允许你在一些节点上（如提交代码，特定时间等）触发一些操作，用到博客上之后，每次只需要在cmd命令行中提交3行简单代码， 就能实现上文将&lt;code&gt;publish&lt;/code&gt;上传至github的繁琐操作，实现自动部署。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在Github上面再次新建一个仓库，用于存放Hugo的主文件，名称任意设置，安全起见，建议将状态设置为&lt;code&gt;private&lt;/code&gt;，接着点击&lt;code&gt;Creat respository&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前往&lt;code&gt;settings -&amp;gt; Developer Settings -&amp;gt; Personal access tokens&lt;/code&gt;，创建一个&lt;code&gt;token(classic)&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;token选择永不过期，并且勾选&lt;strong&gt;repo&lt;/strong&gt;和&lt;strong&gt;workflow&lt;/strong&gt;选项，最后点击&lt;code&gt;generate&lt;/code&gt;，复制生成的token（&lt;strong&gt;只会显示一次，注意保存&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731307583975_202409181729591.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;202409181729591.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为保证安全，可以将生成的token，保存的仓库的变量中，前往&lt;code&gt;Settings -&amp;gt; Secrets and variables -&amp;gt; Actions&lt;/code&gt;中设置，任意命名，粘贴生成的token。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731307761567_202409181730141.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;202409181730141.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回到hugo主文件&lt;code&gt;dev&lt;/code&gt;，创建一个&lt;code&gt;.github/workflows/xxxx.yaml&lt;/code&gt;文件，将下面的代码复制至&lt;code&gt;xxxx.yaml&lt;/code&gt;文件中。&lt;strong&gt;（若出现&lt;code&gt;必须键入文件名&lt;/code&gt;的提示，方法如下）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;解决方法
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1、首先创建一个123.githuib的文件
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2、在该文件所在目录上打开cmd命令窗口，输入rename 123.github .gitub
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3、点击回车即可完成修改
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;name: deploy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 代码提交到main分支时触发github action
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;on:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  push:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    branches:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jobs:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  deploy:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    runs-on: ubuntu-latest
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    steps:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        - name: Checkout
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          uses: actions/checkout@v4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          with:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              fetch-depth: 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        - name: Setup Hugo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          uses: peaceiris/actions-hugo@v3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          with:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              hugo-version: &amp;#34;latest&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              extended: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        - name: Build Web
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          run: hugo -D
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - name: Deploy Web
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          uses: peaceiris/actions-gh-pages@v4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          with:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              PERSONAL_TOKEN: ${{ secrets.你的token变量名 }}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              EXTERNAL_REPOSITORY: 你的github名/你的仓库名
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              PUBLISH_BRANCH: main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              PUBLISH_DIR: ./public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              commit_message: auto deploy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接着在hugo主文件&lt;code&gt;dev&lt;/code&gt;中创建&lt;code&gt;.gitignore&lt;/code&gt;文件，来避免提交不必要的文件（&lt;strong&gt;不需要&lt;code&gt;hugo.exe，public，resources，.hugo_build.lock&lt;/code&gt;&lt;/strong&gt;），文件内容如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731310348318_888.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;888.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;code&gt;dev&lt;/code&gt;文件夹（&lt;strong&gt;又不一样了，注意&lt;/strong&gt;）下进入cmd命令窗口（&lt;strong&gt;全选文件路径，输入cmd后回车&lt;/strong&gt;），依次输入以下命令，操作无误后刷新，就会发现大部分文件都上传到github仓库上面了（&lt;strong&gt;不必要的文件上一步已经排除掉了&lt;/strong&gt;）至此，hugo博客的自动部署也已经结束。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;cmd命令&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git add&lt;/code&gt; .&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git commit -m &amp;quot;first commit&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git branch -M main&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git remote add origin {你的github仓库地址}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git push -u origin main&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731308860942_777.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;777.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;后续新文章写作与上传&#34;&gt;后续新文章写作与上传
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;后续撰写新文章的话，按&lt;code&gt;三步走&lt;/code&gt;就能实现本地撰写和线上同步&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在&lt;code&gt;dev&lt;/code&gt;文件夹下进入cmd命令窗口（&lt;strong&gt;全选文件路径，输入cmd后回车&lt;/strong&gt;），输入&lt;code&gt;hugo new content post/xxxx/index.md&lt;/code&gt;（&lt;strong&gt;xxx名字自定&lt;/strong&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在新创建的文件夹中会有&lt;code&gt;index.md&lt;/code&gt;文件，在该文件中撰写文章&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;code&gt;dev&lt;/code&gt;文件夹下再次进入cmd命令窗口（&lt;strong&gt;全选文件路径，输入cmd后回车&lt;/strong&gt;），依次输入以下命令即可&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;cmd命令&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git add&lt;/code&gt; .&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git commit -m &amp;quot;update&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
