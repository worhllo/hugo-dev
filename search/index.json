[{"content":"","date":"2024-11-17T19:58:48+08:00","permalink":"https://worhllo.github.io/hugo-dev/p/%E5%86%8D%E6%AC%A1%E6%B5%8B%E8%AF%95/","title":"再次测试"},{"content":"","date":"2024-11-17T19:55:41+08:00","permalink":"https://worhllo.github.io/hugo-dev/p/%E6%B5%8B%E8%AF%95%E4%B8%8A%E4%BC%A0/","title":"测试上传"},{"content":"Hugo ｜ 自定义 hugo-theme-Stack - Falasool 在Hugo中添加自定义面包屑导航 (eimoon.com) 博客魔改美化（通用） | Naive Koala (xalaok.top) Hugo Stack主题装修笔记 (thirdshire.com) hugo stack 主题美化 2 (yelleis.top) Hugo Stack主题更新小记 (xrg.fj.cn) 【Hugo】APlayer + PJAX 引入音乐播放放器并实现音乐不中断功能 (letere-gzj.github.io) hugo stack 主题美化 (yelleis.top) 使用 Hugo 对博客的重建与 Stack 主题优化记录 (oxidane-uni.github.io) Hugo+Stack主题集成Vercount统计网站访问信息 (farb.top) Hugo 的 LoveIt 主题修改及增强（三） - Stilig\u0026rsquo;s blog Hugo：总字数统计 | Blog (huuuuuuo.github.io) Hugo：博客运行时间 | Blog (huuuuuuo.github.io) Hugo：一键回到顶部 | Blog (huuuuuuo.github.io) Hugo：自定义字体 | Blog (huuuuuuo.github.io) Hugo：访问量统计 | Blog (huuuuuuo.github.io) Hugo：内容折叠与代码块大小限制 | Blog (huuuuuuo.github.io) Hugo：图片点击放大 | Blog (huuuuuuo.github.io) Hugo：添加热力图 | Blog (huuuuuuo.github.io) Hugo：添加随机浏览文章功能 | Blog (huuuuuuo.github.io) Hugo：阅读进度条 | Blog (huuuuuuo.github.io) Hugo：归档改为年月日统计 | Blog (huuuuuuo.github.io) Hugo Stack 主题美化 (limuran.top) Hugo 添加 Giscus 评论 - Stilig\u0026rsquo;s blog 给 Hugo 加一点好玩的功能 (irithys.com) hugo添加utterances🔮评论系统 | Chance 多语言 hugo 添加总字数统计和建站时间 - 滑翔闪\u0026rsquo;S BLOG (huaxiangshan.com) hugo博客音乐组件 (lihan3238.github.io) hugo模板自定义修改 (lihan3238.github.io) hugo模板自定义修改 (lihan3238.github.io) 如何在hugo生成的网页中插入嵌入式音乐 | Ian\u0026rsquo;s Site (neverstop.eu.org) Hugo博客 | stack主题修改第一站 (munlelee.github.io) hugo stack 主题美化 (yelleis.top) Hugo ｜ 自定义 hugo-theme-Stack - Falasool ","date":"2024-11-16T17:47:34+08:00","image":"https://imgbed.worhllo.us.kg/file/1731732863804_Markdown.jpg","permalink":"https://worhllo.github.io/hugo-dev/p/%E9%9A%8F%E7%AC%94%E6%B5%8B%E8%AF%95/","title":"随笔测试"},{"content":"前言 Hugo Stack 是一款专为博主设计的卡片风格的 Hugo 主题。它提供了一套丰富的特性集合，包括自动生成目录、本地搜索、代码高亮、图片放大等功能。该主题遵循 MIT 许可证发布，且其标志性的简洁与易用性让它成为众多个人博客的优选方案。详细信息可以通过访问 GitHub 来贡献代码或深入了解项目。\n原生的stack主题虽然已经挺好看的了，但是仍然还美化的空间；还有进步的可能性；还有不断完善的潜力，因此，集多篇大佬优质的博客于一篇文章中，这篇博客就此诞生！\n文件添加随机海报 点击展开代码，推荐在模板中设置，修改 archetypes/default.md（如果没有则新建一个即可） 1 2 3 4 5 --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} image: https://picsum.photos/800/600.webp?random={{ substr (md5 (.Date)) 4 8 }} --- 添加彩虹背景 在layouts/partials/footer/custom.html 中增加以下内容 1 2 3 4 5 6 7 8 9 \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/gh/zhixuan2333/gh-blog@v0.1.0/js/ribbon.min.js\u0026#34; integrity=\u0026#34;sha384-UEK8ZiP3VgFNP8KnKMKDmd4pAUAOJ59Y2Jo3ED2Z5qKQf6HLHovMxq7Beb9CLPUe\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; size=\u0026#34;300\u0026#34; alpha=\u0026#34;0.6\u0026#34; zindex=\u0026#34;-1\u0026#34; defer \u0026gt;\u0026lt;/script\u0026gt; 滚动条美化 在assets/scss/custom.scss 添加以下内容 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 html{ ::-webkit-scrollbar { width: 20px; } ::-webkit-scrollbar-track { background-color: transparent; } ::-webkit-scrollbar-thumb { background-color: #d6dee1; border-radius: 20px; border: 6px solid transparent; background-clip: content-box; } ::-webkit-scrollbar-thumb:hover { background-color: #a8bbbf; } } 选中文本样式美化 在assets/scss/custom.scss 添加以下内容 1 2 3 4 ::selection { color: #ffff; background: #557697; } 搜索菜单动画 在assets/scss/custom.scss 添加以下内容 1 2 3 4 5 6 7 .search-form.widget { transition: transform 0.6s ease; } .search-form.widget:hover { transform: scale(1.1, 1.1); } 归档动画 在assets/scss/custom.scss 添加以下内容 1 2 3 4 5 6 7 .widget.archives .widget-archive--list { transition: transform .3s ease; } .widget.archives .widget-archive--list:hover { transform: scale(1.05, 1.05); } 标签动画 在assets/scss/custom.scss 添加以下内容 1 2 3 4 5 6 7 8 9 .tagCloud .tagCloud-tags a { border-radius: 10px; font-size: 1.4rem; transition: transform .3s ease; } .tagCloud .tagCloud-tags a:hover { transform: scale(1.1, 1.1); } 归档页面双栏 在assets/scss/custom.scss 添加以下内容 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 @media (min-width: 1024px) { .article-list--compact { display: grid; grid-template-columns: 1fr 1fr; background: none; box-shadow: none; gap: 1rem; article { background: var(--card-background); border: none; box-shadow: var(--shadow-l2); margin-bottom: 8px; border-radius: 16px; } } } 在文章中插入嵌入式音乐 第一步，在layouts\\shortcodes\\netese.html中添加以下内容 1 2 3 4 5 \u0026lt;iframe frameborder=\u0026#34;no\u0026#34; border=\u0026#34;0\u0026#34; marginwidth=\u0026#34;0\u0026#34; marginheight=\u0026#34;0\u0026#34; width=330 height=86 src=\u0026#34;//music.163.com/outchain/player?type=2\u0026amp;id=1304708603\u0026amp;auto=1\u0026amp;height=66\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; 第二步，在markdown文章中添加以下代码（#号删掉），后面的数字即网易云ID，点击网易云 ，选择喜欢的歌曲，复制导航栏的ID即可 1 {#{\u0026lt; netese 1304708603 \u0026gt;}#} 添加返回顶部按钮（方法1） 在 layouts/partials/footer/custom.html 内添加代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 \u0026lt;!--返回顶部按钮 --\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; id=\u0026#34;back-to-top\u0026#34; title=\u0026#34;返回顶部\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;!--返回顶部CSS --\u0026gt; \u0026lt;style\u0026gt; #back-to-top { display: none; position: fixed; bottom: 20px; right: 55px; width: 55px; height: 55px; border-radius: 7px; background-color: rgba(64, 158, 255, 0.5); box-shadow: var(--shadow-l2); font-size: 30px; text-align: center; line-height: 50px; cursor: pointer; } #back-to-top:before { content: \u0026#39; \u0026#39;; display: inline-block; position: relative; top: 0; transform: rotate(135deg); height: 10px; width: 10px; border-width: 0 0 2px 2px; border-color: var(--back-to-top-color); border-style: solid; } #back-to-top:hover:before { border-color: #2674e0; } /* 在屏幕宽度小于 768 像素时，钮位置调整 */ @media screen and (max-width: 768px) { #back-to-top { bottom: 20px; right: 20px; width: 40px; height: 40px; font-size: 10px; } } /* 在屏幕宽度大于等于 1024 像素时，按钮位置调整 */ @media screen and (min-width: 1024px) { #back-to-top { bottom: 20px; right: 40px; } } /* 在屏幕宽度大于等于 1280 像素时，按钮位置调整 */ @media screen and (min-width: 1280px) { #back-to-top { bottom: 20px; right: 55px; } } /* 目录显示时，隐藏按钮 */ @media screen and (min-width: 1536px) { #back-to-top { visibility: hidden; } } \u0026lt;/style\u0026gt; \u0026lt;!--返回顶部JS --\u0026gt; \u0026lt;script\u0026gt; function backToTop() { document.documentElement.scrollIntoView({ behavior: \u0026#39;smooth\u0026#39;, }) } window.onload = function () { let scrollTop = this.document.documentElement.scrollTop || this.document.body.scrollTop let totopBtn = this.document.getElementById(\u0026#39;back-to-top\u0026#39;) if (scrollTop \u0026gt; 0) { totopBtn.style.display = \u0026#39;inline\u0026#39; } else { totopBtn.style.display = \u0026#39;none\u0026#39; } } window.onscroll = function () { let scrollTop = this.document.documentElement.scrollTop || this.document.body.scrollTop let totopBtn = this.document.getElementById(\u0026#39;back-to-top\u0026#39;) if (scrollTop \u0026lt; 200) { totopBtn.style.display = \u0026#39;none\u0026#39; } else { totopBtn.style.display = \u0026#39;inline\u0026#39; totopBtn.addEventListener(\u0026#39;click\u0026#39;, backToTop, false) } } \u0026lt;/script\u0026gt; 添加返回顶部按钮（方法2） 点击展开 在layouts/partials/backtop.html中添加代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 \u0026lt;style\u0026gt; /* add BackTop */ #backtop { color: #c2c0c0; position: fixed; right: 25px; bottom: 25px; width: 35px; height: 35px; z-index: 999998; /* cursor: pointer; */ } \u0026lt;/style\u0026gt; \u0026lt;div id=\u0026#34;backtop\u0026#34;\u0026gt; \u0026lt;svg aria-hidden=\u0026#34;true\u0026#34; focusable=\u0026#34;false\u0026#34; data-prefix=\u0026#34;fas\u0026#34; data-icon=\u0026#34;chevron-circle-up\u0026#34; class=\u0026#34;svg-inline--fa fa-chevron-circle-up fa-w-16\u0026#34; role=\u0026#34;img\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; viewBox=\u0026#34;0 0 512 512\u0026#34;\u0026gt; \u0026lt;path fill=\u0026#34;currentColor\u0026#34; d=\u0026#34;M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm231-113.9L103.5 277.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L256 226.9l101.6 101.6c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L273 142.1c-9.4-9.4-24.6-9.4-34 0z\u0026#34;\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;/svg\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var timer = null; backtop.onclick = function () { cancelAnimationFrame(timer); //获取当前毫秒数 var startTime = +new Date(); //获取当前页面的滚动高度 var b = document.body.scrollTop || document.documentElement.scrollTop; var d = 500; var c = b; timer = requestAnimationFrame(function func() { var t = d - Math.max(0, startTime - (+new Date()) + d); document.documentElement.scrollTop = document.body.scrollTop = t * (-c) / d + b; timer = requestAnimationFrame(func); if (t == d) { cancelAnimationFrame(timer); } }); } \u0026lt;/script\u0026gt; 然后在 layouts/_default/baseof.html 里面添加如下代码\n1 {{ partial \u0026#34;backtop.html\u0026#34; . }} 外部链接后面会显示图标 在layouts/_default/_markup/render-link.html里{{ .Text | safeHTML }}之后增加如下代码，主目录里面没有该文件或者文件中是空的话，可以直接把ender-link.html从theme中复制过来 1 2 3 4 5 6 7 8 {{ if strings.HasPrefix .Destination \u0026#34;http\u0026#34; }} \u0026lt;span style=\u0026#34;white-space: nowrap;\u0026#34;\u0026gt;\u0026lt;svg width=\u0026#34;.7em\u0026#34; height=\u0026#34;.7em\u0026#34; viewBox=\u0026#34;0 0 21 21\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34;\u0026gt; \u0026lt;path d=\u0026#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z\u0026#34; fill=\u0026#34;currentColor\u0026#34; /\u0026gt; \u0026lt;path d=\u0026#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z\u0026#34; fill=\u0026#34;currentColor\u0026#34;\u0026gt; \u0026lt;/svg\u0026gt;\u0026lt;/span\u0026gt; {{ end }} 引入动态背景 点击展开 首先前往particles.js配置页面 配置参数，参数按自己喜好即可，唯一注意要修改的参数是 detect_on，要改成 window\n其次下载2个文件，即配置文件，以及 particles.js所需要的js文件（如图）\n接着把下载好的文件，解压并将以下两个文件放到assets/background文件夹下\n最后在layouts/partials/footer/custom.html中，引入以下代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;div id=\u0026#34;particles-js\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src={{ (resources.Get \u0026#34;background/particles.min.js\u0026#34;).Permalink }}\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; particlesJS.load(\u0026#39;particles-js\u0026#39;, {{ (resources.Get \u0026#34;background/particlesjs-config.json\u0026#34;).Permalink }}, function() { console.log(\u0026#39;particles.js loaded - callback\u0026#39;); }); \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; #particles-js { position: fixed; top: 0; left: 0; width: 100%; z-index: -1; } \u0026lt;/style\u0026gt; 显示文章更新时间 点击展开 在配置文件 hugo.yaml 中加入以下配置，这样文章的更新时间就会出现在文章底部 1 2 3 4 5 6 7 8 # 更新时间：优先读取git时间 -\u0026gt; git时间不存在，就读取本地文件修改时间 frontmatter: lastmod: - :git - :fileModTime # 允许获取Git信息\tenableGitInfo: true 若想在文章开头就显示更新时间，则修改layouts/partials/article/components/detail.html，删掉原代码，复制粘贴以下代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 \u0026lt;div class=\u0026#34;article-details\u0026#34;\u0026gt; {{ if .Params.categories }} \u0026lt;header class=\u0026#34;article-category\u0026#34;\u0026gt; {{ range (.GetTerms \u0026#34;categories\u0026#34;) }} \u0026lt;a href=\u0026#34;{{ .RelPermalink }}\u0026#34; {{ with .Params.style }}style=\u0026#34;background-color: {{ .background }}; color: {{ .color }};\u0026#34;{{ end }}\u0026gt; {{ .LinkTitle }} \u0026lt;/a\u0026gt; {{ end }} \u0026lt;/header\u0026gt; {{ end }} \u0026lt;div class=\u0026#34;article-title-wrapper\u0026#34;\u0026gt; \u0026lt;h2 class=\u0026#34;article-title\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ .RelPermalink }}\u0026#34;\u0026gt; {{- .Title -}} \u0026lt;/a\u0026gt; \u0026lt;/h2\u0026gt; {{ with .Params.description }} \u0026lt;h3 class=\u0026#34;article-subtitle\u0026#34;\u0026gt; {{ . }} \u0026lt;/h3\u0026gt; {{ end }} \u0026lt;/div\u0026gt; {{ $showReadingTime := .Params.readingTime | default (.Site.Params.article.readingTime) }} {{ $showDate := not .Date.IsZero }} {{ $showFooter := or $showDate $showReadingTime }} {{ if $showFooter }} \u0026lt;footer class=\u0026#34;article-time\u0026#34;\u0026gt; \u0026lt;!-- 更新时间 --\u0026gt; {{- if ne .Lastmod .Date -}} \u0026lt;div class=\u0026#34;article-lastmod\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;clock\u0026#34; }} \u0026lt;time\u0026gt; {{ .Lastmod.Format ( or .Site.Params.dateFormat.lastUpdated \u0026#34;Jan 02, 2006 15:04 MST\u0026#34; ) }} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{- end -}} {{ if $showDate }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;date\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--published\u0026#34;\u0026gt; {{- .Date | time.Format (or .Site.Params.dateFormat.published \u0026#34;Jan 02, 2006\u0026#34;) -}} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} {{ if $showReadingTime }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;clock\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--reading\u0026#34;\u0026gt; {{ T \u0026#34;article.readingTime\u0026#34; .ReadingTime }} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} \u0026lt;/footer\u0026gt; {{ end }} {{ if .IsTranslated }} \u0026lt;footer class=\u0026#34;article-translations\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;language\u0026#34; }} \u0026lt;div\u0026gt; {{ range .Translations }} \u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34; class=\u0026#34;link\u0026#34;\u0026gt;{{ .Language.LanguageName }}\u0026lt;/a\u0026gt; {{ end }} \u0026lt;/div\u0026gt; \u0026lt;/footer\u0026gt; {{ end }} \u0026lt;/div\u0026gt; 首页欢迎横幅 点击展开 \u0026ldquo;打开layouts/index.html，在\u0026lt;section class=article-list\u0026gt;前添加以下代码\u0026rdquo;\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;!-- 首页欢迎字幅 --\u0026gt; \u0026lt;div class=\u0026#34;welcome\u0026#34;\u0026gt; \u0026lt;p style=\u0026#34;font-size: 2rem; text-align: center; font-weight: bold\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;shake\u0026#34;\u0026gt;👋\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026#34;jump-text1\u0026#34; \u0026gt; Welcome\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026#34;jump-text2\u0026#34;\u0026gt; To \u0026lt;/span\u0026gt; \u0026lt;span class=\u0026#34;jump-text3\u0026#34; style=\u0026#34;color:#e99312\u0026#34;\u0026gt;Xa\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;jump-text4\u0026#34; style=\u0026#34;color:#e99312\u0026#34;\u0026gt;l\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;jump-text5\u0026#34; style=\u0026#34;color:#e99312\u0026#34;\u0026gt;a\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;jump-text6\u0026#34; style=\u0026#34;color:#e99312\u0026#34;\u0026gt;o\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;jump-text7\u0026#34; style=\u0026#34;color:#e99312\u0026#34;\u0026gt;k\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;jump-text8\u0026#34; style=\u0026#34;color:#e99312\u0026#34;\u0026gt;\u0026#39;s\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026#34;jump-text9\u0026#34; style=\u0026#34;color:#e99312\u0026#34;\u0026gt;Blog\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- 首页欢迎字幅 --\u0026gt; 在 assets/scss/custom.scss 中加入以下代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 //首页欢迎板块样式 .welcome { color: var(--card-text-color-main); background: var(--card-background); box-shadow: var(--shadow-l2); border-radius: 30px; display: inline-block; } // 👋emoji实现摆动效果 .shake { display: inline-block; animation: shake 1s; animation-duration: 1s; animation-timing-function: ease; animation-delay: 0s; animation-iteration-count: 1; animation-direction: normal; animation-fill-mode: none; animation-play-state: running; animation-name: shake; animation-timeline: auto; animation-range-start: normal; animation-range-end: normal; animation-delay: 2s; @keyframes shake { 0% { transform: rotate(0); } 25% { transform: rotate(45deg) scale(1.2); } 50% { transform: rotate(0) scale(1.2); } 75% { transform: rotate(45deg) scale(1.2); } 100% { transform: rotate(0); } } } // 实现字符跳动动画 .jump-text1 { display: inline-block; animation: jump 0.5s 1; } .jump-text2 { display: inline-block; animation: jump 0.5s 1; animation-delay: 0.1s; } .jump-text3 { display: inline-block; animation: jump 0.5s 1; animation-delay: 0.2s; } .jump-text4 { display: inline-block; animation: jump 0.5s 1; animation-delay: 0.3s; } .jump-text5 { display: inline-block; animation: jump 0.5s 1; animation-delay: 0.4s; } .jump-text6 { display: inline-block; animation: jump 0.5s 1; animation-delay: 0.5s; } .jump-text7 { display: inline-block; animation: jump 0.5s 1; animation-delay: 0.6s; } .jump-text8 { display: inline-block; animation: jump 0.5s 1; animation-delay: 0.7s; } .jump-text9 { display: inline-block; animation: jump 0.5s 1; animation-delay: 0.9s; } @keyframes jump { 0% { transform: translateY(0); } 50% { transform: translateY(-20px); } 100% { transform: translateY(0); } } 修改总体布局 对照原代码，在 /assets/scss/grid.scss 中修改 left-sidebar 和 right-sidebar 的描述 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 .left-sidebar { order: -3; // max-width: var(--left-sidebar-max-width); max-width: 10%; } .right-sidebar { order: -1; // max-width: var(--right-sidebar-max-width); max-width: 20%; /// Display right sidebar when min-width: lg @include respond(lg) { display: flex; } } 头像旋转 在 /assets/scss/custom.scss 中加入以下代码 1 2 3 4 5 6 7 8 // 头像旋转动画 .sidebar header .site-avatar .site-logo { transition: transform 1.65s ease-in-out; // 旋转时间 } .sidebar header .site-avatar .site-logo:hover { transform: rotate(360deg); // 旋转角度为360度 } 多图排版 增添到 assets/scss/partials/layout/article.scss，文章里输入 md 图片语法换行但不空行即可 1 2 3 4 5 6 7 .article-content p:has(\u0026gt; img:nth-child(2)){column-count:2;column-gap:8px;margin:6px 0;} .article-content p:has(\u0026gt; img:nth-child(3)){column-count:3;} .article-content p:has(\u0026gt; img:nth-child(4)){column-count:4;} .article-content p:has(\u0026gt; img:nth-child(5)){column-count:5;} .article-content p:has(\u0026gt; img:nth-child(6)){column-count:4;} .article-content p:has(\u0026gt; img:nth-child(2)) img{display:flex;} .article-content p:has(\u0026gt; img:nth-child(6)) img{margin-bottom:8px;} “博客已运行x天x小时x分钟”字样 展开代码 在layouts/partials/footer/custom.html里添加以下JS代码，其中s1是网站创建日期。代码参考自这里 ，我加上了小时和分钟的计算。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u0026lt;!-- Add blog running time --\u0026gt; \u0026lt;script\u0026gt; let s1 = \u0026#39;2023-3-18\u0026#39;; //website start date s1 = new Date(s1.replace(/-/g, \u0026#34;/\u0026#34;)); let s2 = new Date(); let timeDifference = s2.getTime() - s1.getTime(); let days = Math.floor(timeDifference / (1000 * 60 * 60 * 24)); let hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)); let minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60)); let result = days + \u0026#34;天\u0026#34; + hours + \u0026#34;小时\u0026#34; + minutes + \u0026#34;分钟\u0026#34;; document.getElementById(\u0026#39;runningdays\u0026#39;).innerHTML = result; \u0026lt;/script\u0026gt; 再在layouts/partials/footer/footer.html里添加以下代码：\n1 2 3 4 5 \u0026lt;!-- Add blog running time --\u0026gt; \u0026lt;section class=\u0026#34;running-time\u0026#34;\u0026gt; 本博客已稳定运行 \u0026lt;span id=\u0026#34;runningdays\u0026#34; class=\u0026#34;running-days\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/section\u0026gt; 在assets/scss/partials/footer.scss里添加风格样式，这里我单独把计时的部分加粗，并改了颜色。\n1 2 3 4 5 6 7 8 9 .running-time { color: var(--card-text-color-secondary); font-weight: normal; .running-days { font-weight:bold; color: var(--emphasize-text-color); } } 总字数统计：“发表了x篇文章，共计x字” 点击展开代码 在layouts/partials/footer/footer.html里增加以下代码，其中文章篇数统计参考了这篇 ，字数统计的展示方式参考了小球飞鱼的博客 。\n1 2 3 4 5 6 7 8 9 \u0026lt;!-- Add total page and word count time --\u0026gt; \u0026lt;section class=\u0026#34;totalcount\u0026#34;\u0026gt; {{$scratch := newScratch}} {{ range (where .Site.Pages \u0026#34;Kind\u0026#34; \u0026#34;page\u0026#34; )}} {{$scratch.Add \u0026#34;total\u0026#34; .WordCount}} {{ end }} 发表了{{ len (where .Site.RegularPages \u0026#34;Section\u0026#34; \u0026#34;post\u0026#34;) }}篇文章 · 总计{{ div ($scratch.Get \u0026#34;total\u0026#34;) 1000.0 | lang.FormatNumber 2 }}k字 \u0026lt;/section\u0026gt; 在assets/scss/partials/footer.scss里修改风格：\n1 2 3 4 5 .totalcount { color: var(--card-text-color-secondary); font-weight: normal; margin-bottom: 5px; } 旅行者 1 号离地球距离 点击展开代码 在layouts/partials/footer/footer.html里增加以下代码 1 2 3 4 \u0026lt;!-- 旅行者 1 号离地球距离 --\u0026gt; \u0026lt;section class=\u0026#34;voyager\u0026#34;\u0026gt; \u0026lt;span id=\u0026#34;voyager\u0026#34;\u0026gt;载入旅行者一号离地球距离信息...\u0026lt;/span\u0026gt; \u0026lt;/section\u0026gt; 在layouts/partials/footer/custom.html里添加以下JS代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \u0026lt;script language=\u0026#34;javascript\u0026#34;\u0026gt; var now = new Date(); function createtime(){ // 当前时间 now.setTime(now.getTime()+250); var grt= new Date(\u0026#34;20xx/xx/xx 00:00:00\u0026#34;); //网站诞生时间 days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 ){hnum = \u0026#34;0\u0026#34; + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = \u0026#34;0\u0026#34; + mnum;} seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 ){snum = \u0026#34;0\u0026#34; + snum;} document.getElementById(\u0026#34;timeDate\u0026#34;).innerHTML = \u0026#34;本站已稳定运行\u0026#34;+dnum+\u0026#34; 天 \u0026#34;; document.getElementById(\u0026#34;times\u0026#34;).innerHTML = hnum + \u0026#34; 小时 \u0026#34; + mnum + \u0026#34; 分 \u0026#34; + snum + \u0026#34; 秒\u0026#34; } setInterval(\u0026#34;createtime()\u0026#34;,250); \u0026lt;/script\u0026gt; 修改背景色 点击展开代码，在assets\\scss\\variables.scss中对颜色代码进行修改，附 颜色查询网站 1 --body-background: #f5f5f5; 新增一个随笔页面并实现加密功能 点击展开代码 在content/page/目录下新建一个musings文件夹，然后在里面新建index.md文件，内容如下：\n1 2 3 4 5 6 7 8 9 10 11 --- title: \u0026#34;随笔\u0026#34; date: 2023-09-08 layout: \u0026#34;musings\u0026#34; slug: \u0026#34;musings\u0026#34; menu: main: weight: 4 params: icon: note --- 在layouts/_default目录下新建一个musings.html文件，以实现查找并显示tag为musings的文章，内容如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 {{ define \u0026#34;body-class\u0026#34; }}template-archives{{ end }} {{ define \u0026#34;main\u0026#34; }} \u0026lt;h1 class=\u0026#34;big-title\u0026#34; style=\u0026#34;color: white;\u0026#34;\u0026gt;随笔\u0026lt;/h1\u0026gt; {{ $pages := where .Site.RegularPages \u0026#34;Type\u0026#34; \u0026#34;in\u0026#34; .Site.Params.mainSections }} {{ $notHidden := where .Site.RegularPages \u0026#34;Params.hidden\u0026#34; \u0026#34;!=\u0026#34; true }} {{ $filtered := ($pages | intersect $notHidden) }} {{ range $filtered.GroupByDate \u0026#34;2006\u0026#34; }} {{ $id := lower (replace .Key \u0026#34; \u0026#34; \u0026#34;-\u0026#34;) }} \u0026lt;div class=\u0026#34;archives-group\u0026#34; id=\u0026#34;{{ $id }}\u0026#34;\u0026gt; \u0026lt;h2 class=\u0026#34;archives-date section-title\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;{{ $.RelPermalink }}#{{ $id }}\u0026#34;\u0026gt;{{ .Key }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; \u0026lt;div class=\u0026#34;article-list--compact\u0026#34;\u0026gt; {{ range .Pages }} {{ if in .Params.tags \u0026#34;musings\u0026#34; }} \u0026lt;article\u0026gt; \u0026lt;a href=\u0026#34;{{ .RelPermalink }}\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;article-details\u0026#34;\u0026gt; \u0026lt;h2 class=\u0026#34;article-title\u0026#34;\u0026gt; {{- .Title -}} \u0026lt;/h2\u0026gt; \u0026lt;footer class=\u0026#34;article-time\u0026#34;\u0026gt; \u0026lt;time datetime=\u0026#39;{{ .Date.Format \u0026#34;2006-01-02T15:04:05Z07:00\u0026#34; }}\u0026#39;\u0026gt; {{- .Date.Format (or .Site.Params.dateFormat.published \u0026#34;Jan 02, 2006\u0026#34;) -}} \u0026lt;/time\u0026gt; \u0026lt;/footer\u0026gt; \u0026lt;/div\u0026gt; {{- $image := partialCached \u0026#34;helper/image\u0026#34; (dict \u0026#34;Context\u0026#34; . \u0026#34;Type\u0026#34; \u0026#34;articleList\u0026#34;) .RelPermalink \u0026#34;articleList\u0026#34; -}} {{ if $image.exists }} \u0026lt;div class=\u0026#34;article-image\u0026#34;\u0026gt; {{ if $image.resource }} {{- $Permalink := $image.resource.RelPermalink -}} {{- $Width := $image.resource.Width -}} {{- $Height := $image.resource.Height -}} {{- if (default true .Page.Site.Params.imageProcessing.cover.enabled) -}} {{- $thumbnail := $image.resource.Fill \u0026#34;120x120\u0026#34; -}} {{- $Permalink = $thumbnail.RelPermalink -}} {{- $Width = $thumbnail.Width -}} {{- $Height = $thumbnail.Height -}} {{- end -}} \u0026lt;img src=\u0026#34;{{ $Permalink }}\u0026#34; width=\u0026#34;{{ $Width }}\u0026#34; height=\u0026#34;{{ $Height }}\u0026#34; alt=\u0026#34;{{ .Title }}\u0026#34; loading=\u0026#34;lazy\u0026#34;\u0026gt; {{ else }} \u0026lt;img src=\u0026#34;{{ $image.permalink }}\u0026#34; loading=\u0026#34;lazy\u0026#34; alt=\u0026#34;Featured image of post {{ .Title }}\u0026#34; /\u0026gt; {{ end }} \u0026lt;/div\u0026gt; {{ end }} \u0026lt;/a\u0026gt; \u0026lt;/article\u0026gt; {{ end }} {{ end }} \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; {{ end }} {{ partialCached \u0026#34;footer/footer\u0026#34; . }} {{ end }} 在layouts\\partials\\article\\article.html中添加以下代码，可能在原.html中会有部分已经存在的代码，记得删去\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 {{ if isset .Params \u0026#34;password\u0026#34; }} \u0026lt;div id=\u0026#34;password-protected-content\u0026#34; style=\u0026#34;border: 1px solid #ccc; padding: 10px; border-radius: 5px; background-color: #f9f9f9; text-align: center;\u0026#34;\u0026gt; \u0026lt;p style=\u0026#34;font-size: 16px; margin-bottom: 10px;\u0026#34;\u0026gt;{{ with .Params.passwordPoint }}{{ . }}{{ else }}这是密码保护的内容，请输入密码访问：{{ end }}\u0026lt;/p\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; id=\u0026#34;password-input\u0026#34; style=\u0026#34;padding: 5px; margin-bottom: 10px; width: 200px;\u0026#34;\u0026gt; \u0026lt;button onclick=\u0026#34;verifyPassword()\u0026#34; style=\u0026#34;padding: 5px 10px; background-color: #007bff; color: #fff; border: none; border-radius: 3px; cursor: pointer;\u0026#34;\u0026gt;提交\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;article-content\u0026#34; style=\u0026#34;display: none;\u0026#34;\u0026gt; \u0026lt;article class=\u0026#34;{{ if .Params.image }}has-image {{ end }}main-article\u0026#34;\u0026gt; {{ partial \u0026#34;article/components/header\u0026#34; . }} \u0026lt;!-- 以下部分仅在密码验证通过后显示 --\u0026gt; \u0026lt;div id=\u0026#34;content\u0026#34;\u0026gt; {{ partial \u0026#34;article/components/content\u0026#34; . }} \u0026lt;/div\u0026gt; \u0026lt;!-- End of password-protected content --\u0026gt; {{ partial \u0026#34;article/components/footer\u0026#34; . }} {{ if or .Params.math .Site.Params.article.math }} {{ partialCached \u0026#34;article/components/math.html\u0026#34; . }} {{ end }} \u0026lt;/article\u0026gt; \u0026lt;/div\u0026gt; {{ else }} \u0026lt;div id=\u0026#34;article-content\u0026#34;\u0026gt; \u0026lt;article class=\u0026#34;{{ if .Params.image }}has-image {{ end }}main-article\u0026#34;\u0026gt; {{ partial \u0026#34;article/components/header\u0026#34; . }} {{ partial \u0026#34;article/components/content\u0026#34; . }} {{ partial \u0026#34;article/components/footer\u0026#34; . }} {{ if or .Params.math .Site.Params.article.math }} {{ partialCached \u0026#34;article/components/math.html\u0026#34; . }} {{ end }} \u0026lt;/article\u0026gt; \u0026lt;/div\u0026gt; {{ end }} \u0026lt;script\u0026gt; function verifyPassword() { var inputPassword = document.getElementById(\u0026#39;password-input\u0026#39;).value; var correctPassword = \u0026#39;{{ with .Params.password }}{{ . }}{{ else }}{{ \u0026#34;\u0026#34; }}{{ end }}\u0026#39;; // 获取文章 Front Matter 中定义的密码 if (inputPassword === correctPassword) { document.getElementById(\u0026#39;password-protected-content\u0026#39;).style.display = \u0026#39;none\u0026#39;; // 隐藏密码输入框 document.getElementById(\u0026#39;article-content\u0026#39;).style.display = \u0026#39;block\u0026#39;; // 显示文章内容 } else { alert(\u0026#39;密码错误，请重新输入！\u0026#39;); } } \u0026lt;/script\u0026gt; 要写随笔并要设置密码时，在.md文件的开头添加如下字段即可，将您的安全密码设置为想设置的实际密码，另一个不用动\n1 2 3 4 --- password: \u0026#34;您的安全密码\u0026#34; passwordPoint: \u0026#34;请正确输入密码！\u0026#34; --- ","date":"2024-11-14T22:47:32+08:00","image":"https://imgbed.worhllo.us.kg/file/1731767487341_fghffx.png","permalink":"https://worhllo.github.io/hugo-dev/p/stack%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E5%A4%A7%E6%9D%82%E7%83%A9/","title":"stack主题美化大杂烩"},{"content":"初步介绍 本项目是 Telegraph-Image 的重制版，\n项目图片存储在 telegraph 的服务器上，支持图片审查 API，可自动屏蔽不良图片； 项目由 cloudflare 提供全球 cdn 服务，基于 cloudflare pages 执行，可自定义域名； 项目支持身份认证和多种上传方式（拖拽，选择文件，粘贴等），图片突破 5mb 的上传限制； 项目的自定义程度极高，可自定义页面，网站名称与 logo，过渡动画流畅丝滑 作者博客（点击跳转） 前端仓库（点击跳转） 项目仓库（点击跳转） 界面一览 正式实操 环境部署 部署此项目首先要求你拥有一个 GitHub 账号（点击跳转） ，一个 cloudflare 账号（点击跳转） ，一个属于自己的域名以及一个 Telegram 账号\nTelegram 配置 １．获取 TG_BOT_TOKEN 登陆telegram ，在搜索框中搜索 @BotFather.bat （注意甄别，千万别点错了）\n打开对话界面，点击 开始然后按图示进行配置，得到TOKEN后复制保存备用\n２．获取 TG_CHAT_ID（频道 ID） 在 telegram 中 打开左侧的二级菜单，打开新建频道（Manage Channel），频道名字任意，后面内容可以直接跳过。\n完成创建后找到管理频道，在菜单中找到 管理员（Administrators），菜单中点击 添加管理员，将刚才创建的机器人（你命名的那个机器人）也设为管理员（注意搜索时要 @刚才设置的用户名 别填加错了），权限默认即可。\n完成后首页搜索 @VersaToolsBot，回复/start然后在你刚才创建的频道里随便发一条消息，并将消息转发到 @VersaToolsBot，接着就会得到我们需要的ID，复制保存备用。\ncloudflare 配置 首先打开该项目仓库（点击跳转） ，点击 Fork，跳转页面后不需要任何改动，直接点击 Create fork”即可\n成功创建 fork 后来到 登录cloudflare 账号，打开仪表盘，点击侧边栏中的 Workers和 Pages，点击上方的 创建，选到 Pages一栏，点击 连接到 Git\n在打开的第一个页面点击 连接到 GitHub，随后会跳转到 GitHub 进行授权，选到 All repositories\n完成授权后会回到cloudflare，找到选择存储库的界面，选择刚才 fork 的仓库后点击 开始设置，跳转页面后直接划到下面点击 保存并部署即可，出现下图即部署完成，点击 继续处理项目\n1．设置认证码与后台管理的账号密码 点击 自定义域， 添加一个你自己的域名，点击左侧栏中的 KV，点击 创建命名空间， 名称为 img_url点击 添加\n完成添加后回到 page 的界面，点击 设置 后点击 变量与机密，找到 绑定 一栏，点击 添加 ，在弹出的页面中找到 KV 命名空间，变量名称填写 img_url，KV 命名空间 选择刚才创建的 KV img_url完成后点击保存\n在绑定的上面找到 变量与机密一栏，点击右侧的 添加，添加 环境变量，常用环境变量如下表，按需要添加\n变量名称 作用 是否推荐 TG_CHAT_ID telegram 频道 ID 必须 TG_BOT_TOKEN telegram 机器人 token 必须 BASIC_USER 后台管理的账户名 推荐 BASIC_PASS 后台管理的密码 推荐 AUTH_CODE 前台的认证码 强烈推荐 ModerateContentApiKey 前台的认证码 ALLOWED_DOMAINS 防盗链 访问域名限制 多个允许的域名用英文 , 分割，如：域名.com,域名2.top AllowRandom 随机图 api 的前置，后面会讲到 完成后点击保存， 然后重新部署（所有关于环境变量和 kv 绑定的修改都要重新部署一遍），选到 部署一栏， 在 所有部署下面找到你最新的部署（就是最上面的那一个），鼠标点击在右侧三个点，在弹出的菜单中选择 重新部署，等待部署完成后即可使用\n2．内容审查ａｐｉ 打开 moderatecontent 官网（点击跳转） ，注册账号后获取到你的 api ，在环境变量中添加一条 ModerateContentApiKey，值就是你获取的 api，保存后别忘了重新部署一遍\n3．随机图ａｐｉ 在设置好环境变量后访问 https://your.domain/random 本文出处 完全免费，图文教程手把手教你使用cloudflare搭建一个无限空间的私人图床，支持身份认证与成人元素鉴定 保姆级教程：使用Cloudflare+Telegraph搭建零成本图床系统 - 胡萝虎的博客 (huluohu.com) ","date":"2024-11-12T19:14:04+08:00","image":"https://imgbed.worhllo.us.kg/file/1731733156524_ggfdg.png","permalink":"https://worhllo.github.io/hugo-dev/p/%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E6%97%A0%E9%99%90%E7%A9%BA%E9%97%B4%E6%94%AF%E6%8C%81%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%9A%84%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/","title":"免费搭建无限空间＆支持身份认证的私人图床"},{"content":"什么是Win+R，有何优点 防止有些小白看不懂，所以说明一些，使用Windows+R快捷键就可以打开如下图的运行窗口，在里面输入命令可以方便快捷地打开很多东西，而且本文的所有操作都是在这个运行框里输入的，不要与cmd弄混了。\n1.可用于实现快速启动软件，打开文件夹/网站\n2.可用于实现网站批量搜索\n3.可用于实现一键下载视频\n4.搭配同步盘轻松实现多台电脑配置同步\n5.无需额外安装软件\n6.没有兼容性问题，全Windows.系统通用\n7.优先级高，可在任何界面呼出\n8.完全免费，没有任何限制\n9.有利于电脑桌面整洁\n# 如何设置 1.配置环境变量 首先需要创建一个文件夹，用于存放包括软件但不限于软件快捷方式、bat文件等文件，然后复制文件夹的路径\n将这个文件夹设置到系统环境变量中，搜索栏输入高级系统设置来直达设置页面\n找到系统变量中的Path变量，点击编辑，点击新建，然后将之前复制的文件夹路径粘贴进去，至此，最重要的地基已经搭建完成，现在可以开始搭建高楼了\n2.快速启动软件（快捷方式）等 如图，本人设置的文件夹路径为D:\\win＋R，那就只需要把你想快速启动的软件、快捷方式（放进该文件夹内的文件都可以任意命名，尽量简短易记）都放到这个文件夹里面去，然后你的电脑桌面就可以不放任何软件的快捷方式了，有想要启动的软件，你只需要按下键盘上的WIN+R键，接着输入你想启动的软件的对应名，最后按下回车即可\n各个软件快捷方式的名称推荐两种方式来命名：\n可以用缩写：比如说Photoshop可以改为ps、MuMu模拟器改为mumu等 可以直接根据需求：如可以把QQ音乐直接命名为听歌、 Steam命名为游戏等 3.快速打开网站 先新建一个文本文档，在文档中输入以下内容https://worhllo.github.io/hugo-dev/是你想设置的网址链接（可设置多个网站链接），请自定义设置。然后把文本文档的后缀名从txt改为.bat,文件名自定义设置，接着把这个.bat文件放到你的快速启动文件夹中，然后只需要WIN+R唤起运行窗口，再输入定义好的名字，就能快速打开网站了。后续如果想对.bat文件进行修改，直接右键.bat文件，选择编辑即可\n1 2 3 @echo off # 使用默认浏览器打开URL地址 start https://worhllo.github.io/hugo-dev/ 4.多网站批量搜索 在实现批量搜索之前，你必须得了解搜索串是什么。比如说我用bing.com搜索一下吾爱破解然后在地址栏中可以看到如下链接：https://cn.bing.com/search?q=吾爱破解\u0026amp;cvid，其中的关键部分是：https://cn.bing.com/search?q= 吾爱破解则是传递进这个搜索引擎的关键词，而后面的\u0026amp;cvid则可有可无， 有些时候链接后面会带上更多的参数，你可以自己一点点删掉。删掉之后回车访问一下，如果还能正常访问，说明这些就属于多余的参数，都可以删掉\n而实现批量搜索的方法其实很简单，和就是在批量打开网站的基础上，在搜索串后 面加上参数%1比如下面就是同时在百度、必应、Yandex.上进行搜索的代码：\n1 2 3 4 @echo off start explorer.exe \u0026#34;https://www.baidu.com/s?wd=%1+2+%3+%4+%5+%6+%7+%8+%9\u0026#34; start explorer.exe \u0026#34;https://cn.bing.com/search?q=%1+%2+%3+%4+%5+%6+%7+%8+%9\u0026#34; start explorer.exe \u0026#34;https://yandex.com/search/?text=%1+%2+%3+%4+%5+%6+%7+%8+%9\u0026#34; 之后我只需要用WIN+R唤起运行窗口，依次输入：定义好的名字\u0026mdash;-空格\u0026mdash;-想要搜索的关键词，然后敲下回车，即可轻松进行批量搜索了\n这里只得解释一下代码中提到的%1,%2,%3，它表示传入搜索串中的参数，而这个参数最多你可以传递9个，这个参数可多不可少，（即搜索串后面只有一个%1)，那在运行窗口时，你就只能输入一个完整的搜索关键词，而如果你的搜索串中传了多个参数，那么在运行窗口中就可以输入多个关键词，不过注意每个关键词之间要有一个空格，同时最多能传入9个关键词。\n5.本文出处 私认Windows最强效率神器：WIN+R的独家使用心得！（全网最全） ","date":"2024-11-12T11:11:59+08:00","image":"https://imgbed.worhllo.us.kg/file/1731733096451_fsadadesff.jpg","permalink":"https://worhllo.github.io/hugo-dev/p/win-r%E8%87%AA%E5%8A%A8%E5%8C%96%E5%BA%94%E7%94%A8/","title":"Win+R自动化应用"},{"content":"环境准备 下载Hugo 网址：Hugo官网 Github地址:gohugoio/hugo 选择合适的版本下载。 下载git 点击Git官网 点击 Download for Windows 按照指引 安装即可。\n搭建博客 创建Blog 解压hugo_extended_0.134.2_windows-amd64.zip文件，在dev文件夹下进入cmd命令窗口（全选文件路径，输入cmd后回车），输入hugo new site xxxx创建文件（xxx任意命名，此处以dev为例），代码输入无误之后就会生成一个你命名的文件夹。（注意不要急着关闭cmd命令窗口，后面接着要用到）\n再次打开cmd命令窗口，输入cd dev\n将上图页面中的hugo.exe文件复制到dev文件内。\n在cmd命令行中输入hugo server -D，运行成功后会出现以下界面：\n此时，在浏览器中输入命令窗口中出现的链接，即http://localhost:1313/，如果操作无误，则会提示Page Not Found\n下载主题 再次进入Hugo官网 。\n点击Themes选择一款适合的主题，这里以Stack这款主题为例。\n点击Download，下滑至Assets界面，并选择适当的版本，将源码下载下来。\n将文件解压，将其命名为hugo-theme-stack，移动至dev\\themes文件下，接着打开exampleSite文件夹，复制其中的 Content 和 hugo.yaml 复制到主文件夹dev中，然后删掉hugo.toml。\n再次打开cmd命令窗口，输入hugo server -D，打开浏览器输入http://localhost:1313/，若操作无误则主题会正常显示，并出现出相关范例文章。\nGithub部署 常规部署 前提条件：拥有一个属于自己的github账号，没有请自行注册。\n新建仓库，命名任意，但是最好命名为xxx(你的gitub用户名).github.io，（后续生成的链接短，访问博客很方便）选择Public，最后点击Creat respository\n进入到刚创建好的仓库后，前往setting -\u0026gt; Pages -\u0026gt; Branch选择main分支，点击Save，等待一会儿，就会出现https://{github用户名}.github.io 的地址，该地址即为博客的访问地址。\n此时，原来的cmd命令窗口终于能关掉了，接着，在public文件夹（跟之前不一样了，注意）下进入cmd命令窗口（全选文件路径，输入cmd后回车），依次以下命令，操作无误后刷新新建仓库，就会发现文件都上传到github仓库上面了。至此，hugo博客的基本搭建已经结束。\ncmd命令 git init git add . git commit -m \u0026quot;first commit\u0026quot; git branch -M main git remote add origin {你的github仓库地址} git push -u origin main Github Action自动部署 ​ Github Actions是Github上一个类似于持续集成的功能，它允许你在一些节点上（如提交代码，特定时间等）触发一些操作，用到博客上之后，每次只需要在cmd命令行中提交3行简单代码， 就能实现上文将publish上传至github的繁琐操作，实现自动部署。\n在Github上面再次新建一个仓库，用于存放Hugo的主文件，名称任意设置，安全起见，建议将状态设置为private，接着点击Creat respository\n前往settings -\u0026gt; Developer Settings -\u0026gt; Personal access tokens，创建一个token(classic)。\ntoken选择永不过期，并且勾选repo和workflow选项，最后点击generate，复制生成的token（只会显示一次，注意保存）\n为保证安全，可以将生成的token，保存的仓库的变量中，前往Settings -\u0026gt; Secrets and variables -\u0026gt; Actions中设置，任意命名，粘贴生成的token。\n回到hugo主文件dev，创建一个.github/workflows/xxxx.yaml文件，将下面的代码复制至xxxx.yaml文件中。（若出现必须键入文件名的提示，方法如下）\n1 2 3 4 5 6 解决方法 1、首先创建一个123.githuib的文件 2、在该文件所在目录上打开cmd命令窗口，输入rename 123.github .gitub 3、点击回车即可完成修改 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 name: deploy # 代码提交到main分支时触发github action on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build Web run: hugo -D - name: Deploy Web uses: peaceiris/actions-gh-pages@v4 with: PERSONAL_TOKEN: ${{ secrets.你的token变量名 }} EXTERNAL_REPOSITORY: 你的github名/你的仓库名 PUBLISH_BRANCH: main PUBLISH_DIR: ./public commit_message: auto deploy 接着在hugo主文件dev中创建.gitignore文件，来避免提交不必要的文件（不需要hugo.exe，public，resources，.hugo_build.lock），文件内容如下\n在dev文件夹（又不一样了，注意）下进入cmd命令窗口（全选文件路径，输入cmd后回车），依次输入以下命令，操作无误后刷新，就会发现大部分文件都上传到github仓库上面了（不必要的文件上一步已经排除掉了）至此，hugo博客的自动部署也已经结束。\ncmd命令 git init git add . git commit -m \u0026quot;first commit\u0026quot; git branch -M main git remote add origin {你的github仓库地址} git push -u origin main 后续新文章写作与上传 后续撰写新文章的话，按三步走就能实现本地撰写和线上同步\n在dev文件夹下进入cmd命令窗口（全选文件路径，输入cmd后回车），输入hugo new content post/xxxx/index.md（xxx名字自定)\n在新创建的文件夹中会有index.md文件，在该文件中撰写文章\n在dev文件夹下再次进入cmd命令窗口（全选文件路径，输入cmd后回车），依次输入以下命令即可\ncmd命令 git add . git commit -m \u0026quot;update\u0026quot; git push ","date":"2024-11-11T13:12:41+08:00","image":"https://imgbed.worhllo.us.kg/file/1731733015199_12123.jpg","permalink":"https://worhllo.github.io/hugo-dev/p/hugo-github%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/","title":"Hugo+Github博客部署"},{"content":" Markdown语法介绍 一、标题 三号 四号 五号标题 六号标题【最低】 二、分割线 *号分割线 -分割线 三、粗体斜体 斜体\n粗体\n删除线\n四、超链接和图片 超链接,方法1 超链接,方法2 五、无序列表 a b b C V B 六、有序列表 a b c c 七、文字引用 使用 \u0026gt; 表示，可以有多个 \u0026gt; 表示层级更深 第一层\n第二层 这样跳不下去\n还可更深\n这样就跳出去了\n八、行内代码 其实上边已经用过很多次，即使用 ` 表示\n这是行内代码 中间可以换行\n九、代码块 1 2 ​```代码段``` import os 十、表格 商品name price num 靠左 靠右 3 3 4 2 十一、流程图 解释一下这个例子：\nmermaid是Mermaid语言的标记。\ngraph TD;指定了图的类型和方向，这里是从上到下（Top Down）的有向图（Directed Graph）。\nA--\u0026gt;B;和A--\u0026gt;C;表示两个箭头从A出发分别指向B和C。\nB--\u0026gt;D;和C--\u0026gt;D;表示两个箭头从B和C出发分别指向D。\nmermaid graph TD A(工业用地效率)\u0026ndash;\u0026gt;B1(土地利用强度) A\u0026ndash;\u0026gt;B2(土地经济效益) B1\u0026ndash;\u0026gt;C1(容积率) B1\u0026ndash;\u0026gt;C2(建筑系数) B1\u0026ndash;\u0026gt;C3(亩均固定资本投入) B2\u0026ndash;\u0026gt;D1(亩均工业产值) B2\u0026ndash;\u0026gt;D2(亩均税收)\n高级语法 数学公式 $\\ce{Hg^2+ -\u0026gt;[I-] HgI2 -\u0026gt;[I-] [Hg^{II}I4]^2-}$\n$H(D_2) = -\\left(\\frac{2}{4}\\log_2 \\frac{2}{4} + \\frac{2}{4}\\log_2 \\frac{2}{4}\\right) = 1$\n1 2 3 4 5 6 \\begin{pmatrix} 1 \u0026amp; a_1 \u0026amp; a_1^2 \u0026amp; \\cdots \u0026amp; a_1^n \\\\ 1 \u0026amp; a_2 \u0026amp; a_2^2 \u0026amp; \\cdots \u0026amp; a_2^n \\\\ \\vdots \u0026amp; \\vdots \u0026amp; \\vdots \u0026amp; \\ddots \u0026amp; \\vdots \\\\ 1 \u0026amp; a_m \u0026amp; a_m^2 \u0026amp; \\cdots \u0026amp; a_m^n \\\\ \\end{pmatrix} 目录 @[toc] 或 [toc] HTML原生语句 橙色居右 橙色居中\n我是黑体字 我是微软雅黑 我是华文彩云 color=#0099ff size=72 face=\u0026ldquo;黑体\u0026rdquo; color=#00ffff color=gray\n颜色的英文单词：\nred（赤） orange（橙） yellow（黄） green（绿） cyan（青） blue（蓝） purple（紫） 字体的英文单词：\nrm（罗马字体） it （意大利字体） bf（黑体） sl （斜体） sf （等线体） sc （小体大写字母） tt （打字机字体） mit （数学斜体）\n转义 在 Markdown 编辑器里面使用了很多特殊符号来表示特定的意义，该特殊符号将不再显示，这个时候就需要转义字符——反斜杠，如下：\n**转义特殊符号正常显示**\n无转义特殊符号无法正常显示\n","date":"2024-11-11T00:40:48+08:00","image":"https://imgbed.worhllo.us.kg/file/1731732863804_Markdown.jpg","permalink":"https://worhllo.github.io/hugo-dev/p/markdown%E8%AF%AD%E6%B3%95/","title":"Markdown语法"}]