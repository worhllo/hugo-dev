<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>博客 on Watch Your Back</title>
        <link>https://worhllo.github.io/hugo-dev/tags/%E5%8D%9A%E5%AE%A2/</link>
        <description>Recent content in 博客 on Watch Your Back</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Watch Your Back</copyright>
        <lastBuildDate>Tue, 12 Nov 2024 13:10:56 +0000</lastBuildDate><atom:link href="https://worhllo.github.io/hugo-dev/tags/%E5%8D%9A%E5%AE%A2/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Hugo&#43;Github博客部署</title>
        <link>https://worhllo.github.io/hugo-dev/p/hugo-github%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/</link>
        <pubDate>Mon, 11 Nov 2024 13:12:41 +0800</pubDate>
        
        <guid>https://worhllo.github.io/hugo-dev/p/hugo-github%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/</guid>
        <description>&lt;img src="https://worhllo.github.io/hugo-dev/p/hugo-github%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/12123.jpg" alt="Featured image of post Hugo&#43;Github博客部署" /&gt;&lt;h2 id=&#34;环境准备&#34;&gt;环境准备
&lt;/h2&gt;&lt;h3 id=&#34;下载hugo&#34;&gt;下载Hugo
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;网址：&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo官网&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Github地址:&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;gohugoio/hugo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731302389412_image1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image1.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择合适的版本下载。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;下载git&#34;&gt;下载git
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;点击&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731302674605_Git%e5%ae%98%e7%bd%91.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Git官网.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击 &lt;strong&gt;Download for Windows&lt;/strong&gt; 按照&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_42242910/article/details/136297201&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;指引&lt;/a&gt;安装即可。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;搭建博客&#34;&gt;搭建博客
&lt;/h2&gt;&lt;h3 id=&#34;创建blog&#34;&gt;创建Blog
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;解压&lt;code&gt;hugo_extended_0.134.2_windows-amd64.zip&lt;/code&gt;文件，在&lt;code&gt;dev&lt;/code&gt;文件夹下进入cmd命令窗口（&lt;strong&gt;全选文件路径，输入cmd后回车&lt;/strong&gt;），输入&lt;code&gt;hugo new site xxxx&lt;/code&gt;创建文件（&lt;strong&gt;xxx任意命名，此处以dev为例&lt;/strong&gt;），代码输入无误之后就会生成一个你命名的文件夹。（&lt;strong&gt;注意不要急着关闭cmd命令窗口，后面接着要用到&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731306688619_555.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;555.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731302868323_file%e6%88%aa%e5%9b%be.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;file截图.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再次打开cmd命令窗口，输入&lt;code&gt;cd dev&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将上图页面中的&lt;code&gt;hugo.exe&lt;/code&gt;文件复制到&lt;code&gt;dev&lt;/code&gt;文件内。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731303239677_111.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;111.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在cmd命令行中输入&lt;code&gt;hugo server -D&lt;/code&gt;，运行成功后会出现以下界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731310888077_hugo.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;hugo.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此时，在浏览器中输入命令窗口中出现的链接，即&lt;code&gt;http://localhost:1313/&lt;/code&gt;，如果操作无误，则会提示&lt;code&gt;Page Not Found&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;下载主题&#34;&gt;下载主题
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;再次进入&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Hugo官网&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击&lt;code&gt;Themes&lt;/code&gt;选择一款适合的主题，这里以&lt;code&gt;Stack&lt;/code&gt;这款主题为例。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731303957330_Stack.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Stack.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击&lt;code&gt;Download&lt;/code&gt;，下滑至&lt;code&gt;Assets&lt;/code&gt;界面，并选择适当的版本，将源码下载下来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731304063587_image9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image9.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将文件解压，将其命名为&lt;code&gt;hugo-theme-stack&lt;/code&gt;，移动至&lt;code&gt;dev\themes&lt;/code&gt;文件下，接着打开&lt;code&gt;exampleSite&lt;/code&gt;文件夹，复制其中的&lt;code&gt; Content&lt;/code&gt; 和 &lt;code&gt;hugo.yaml&lt;/code&gt; 复制到主文件夹&lt;code&gt;dev&lt;/code&gt;中，然后删掉&lt;code&gt;hugo.toml&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731310967811_999.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;999.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再次打开cmd命令窗口，输入&lt;code&gt;hugo server -D&lt;/code&gt;，打开浏览器输入&lt;code&gt;http://localhost:1313/&lt;/code&gt;，若操作无误则主题会正常显示，并出现出相关范例文章。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731304629655_111.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;111.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;github部署&#34;&gt;Github部署
&lt;/h2&gt;&lt;h3 id=&#34;常规部署&#34;&gt;常规部署
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;前提条件：拥有一个属于自己的github账号，没有请自行注册。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新建仓库，命名任意，但是最好命名为&lt;code&gt;xxx(你的gitub用户名).github.io&lt;/code&gt;，（&lt;strong&gt;后续生成的链接短，访问博客很方便&lt;/strong&gt;）选择&lt;code&gt;Public&lt;/code&gt;，最后点击&lt;code&gt;Creat respository&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731304995863_222.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;222.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731304991297_333.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;333.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入到刚创建好的仓库后，前往&lt;code&gt;setting -&amp;gt; Pages -&amp;gt; Branch&lt;/code&gt;选择main分支，点击&lt;code&gt;Save&lt;/code&gt;，等待一会儿，就会出现&lt;code&gt;https://{github用户名}.github.io&lt;/code&gt; 的地址，该地址即为博客的访问地址。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731311033715_1213.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1213.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此时，原来的cmd命令窗口终于能关掉了，接着，在&lt;code&gt;public&lt;/code&gt;文件夹（&lt;strong&gt;跟之前不一样了，注意&lt;/strong&gt;）下进入cmd命令窗口（&lt;strong&gt;全选文件路径，输入cmd后回车&lt;/strong&gt;），依次以下命令，操作无误后刷新新建仓库，就会发现文件都上传到github仓库上面了。至此，hugo博客的基本搭建已经结束。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;code&gt;cmd命令&lt;/code&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git add&lt;/code&gt; .&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git commit -m &amp;quot;first commit&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git branch -M main&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git remote add origin {你的github仓库地址}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git push -u origin main&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;github-action自动部署&#34;&gt;Github Action自动部署
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;​       Github Actions是Github上一个类似于持续集成的功能，它允许你在一些节点上（如提交代码，特定时间等）触发一些操作，用到博客上之后，每次只需要在cmd命令行中提交3行简单代码， 就能实现上文将&lt;code&gt;publish&lt;/code&gt;上传至github的繁琐操作，实现自动部署。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在Github上面再次新建一个仓库，用于存放Hugo的主文件，名称任意设置，安全起见，建议将状态设置为&lt;code&gt;private&lt;/code&gt;，接着点击&lt;code&gt;Creat respository&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前往&lt;code&gt;settings -&amp;gt; Developer Settings -&amp;gt; Personal access tokens&lt;/code&gt;，创建一个&lt;code&gt;token(classic)&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;token选择永不过期，并且勾选&lt;strong&gt;repo&lt;/strong&gt;和&lt;strong&gt;workflow&lt;/strong&gt;选项，最后点击&lt;code&gt;generate&lt;/code&gt;，复制生成的token（&lt;strong&gt;只会显示一次，注意保存&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731307583975_202409181729591.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;202409181729591.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为保证安全，可以将生成的token，保存的仓库的变量中，前往&lt;code&gt;Settings -&amp;gt; Secrets and variables -&amp;gt; Actions&lt;/code&gt;中设置，任意命名，粘贴生成的token。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731307761567_202409181730141.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;202409181730141.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回到hugo主文件&lt;code&gt;dev&lt;/code&gt;，创建一个&lt;code&gt;.github/workflows/xxxx.yaml&lt;/code&gt;文件，将下面的代码复制至&lt;code&gt;xxxx.yaml&lt;/code&gt;文件中。&lt;strong&gt;（若出现&lt;code&gt;必须键入文件名&lt;/code&gt;的提示，方法如下）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;解决方法
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1、首先创建一个123.githuib的文件
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2、在该文件所在目录上打开cmd命令窗口，输入rename 123.github .gitub
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3、点击回车即可完成修改
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;name: deploy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 代码提交到main分支时触发github action
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;on:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  push:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    branches:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jobs:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  deploy:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    runs-on: ubuntu-latest
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    steps:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        - name: Checkout
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          uses: actions/checkout@v4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          with:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              fetch-depth: 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        - name: Setup Hugo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          uses: peaceiris/actions-hugo@v3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          with:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              hugo-version: &amp;#34;latest&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              extended: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        - name: Build Web
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          run: hugo -D
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - name: Deploy Web
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          uses: peaceiris/actions-gh-pages@v4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          with:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              PERSONAL_TOKEN: ${{ secrets.你的token变量名 }}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              EXTERNAL_REPOSITORY: 你的github名/你的仓库名
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              PUBLISH_BRANCH: main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              PUBLISH_DIR: ./public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              commit_message: auto deploy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接着在hugo主文件&lt;code&gt;dev&lt;/code&gt;中创建&lt;code&gt;.gitignore&lt;/code&gt;文件，来避免提交不必要的文件（&lt;strong&gt;不需要&lt;code&gt;hugo.exe，public，resources，.hugo_build.lock&lt;/code&gt;&lt;/strong&gt;），文件内容如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731310348318_888.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;888.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;code&gt;dev&lt;/code&gt;文件夹（&lt;strong&gt;又不一样了，注意&lt;/strong&gt;）下进入cmd命令窗口（&lt;strong&gt;全选文件路径，输入cmd后回车&lt;/strong&gt;），依次输入以下命令，操作无误后刷新，就会发现大部分文件都上传到github仓库上面了（&lt;strong&gt;不必要的文件上一步已经排除掉了&lt;/strong&gt;）至此，hugo博客的自动部署也已经结束。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;cmd命令&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git add&lt;/code&gt; .&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git commit -m &amp;quot;first commit&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git branch -M main&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git remote add origin {你的github仓库地址}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git push -u origin main&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://imgbed.worhllo.us.kg/file/1731308860942_777.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;777.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;后续新文章写作与上传&#34;&gt;后续新文章写作与上传
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;后续撰写新文章的话，按&lt;code&gt;三步走&lt;/code&gt;就能实现本地撰写和线上同步&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在&lt;code&gt;dev&lt;/code&gt;文件夹下进入cmd命令窗口（&lt;strong&gt;全选文件路径，输入cmd后回车&lt;/strong&gt;），输入&lt;code&gt;hugo new content post/xxxx/index.md&lt;/code&gt;（&lt;strong&gt;xxx名字自定&lt;/strong&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在新创建的文件夹中会有&lt;code&gt;index.md&lt;/code&gt;文件，在该文件中撰写文章&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;code&gt;dev&lt;/code&gt;文件夹下再次进入cmd命令窗口（&lt;strong&gt;全选文件路径，输入cmd后回车&lt;/strong&gt;），依次输入以下命令即可&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;cmd命令&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git add&lt;/code&gt; .&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git commit -m &amp;quot;update&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
